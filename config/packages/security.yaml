security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512
    role_hierarchy:
        ROLE_ADMIN:         ROLE_USER
        ROLE_CHEF_DEPT:     ROLE_USER
        ROLE_GESTIONNAIRE:  ROLE_USER
        ROLE_EVALUATEUR:    ROLE_USER
        ROLE_SUPER_ADMIN:   [ROLE_ADMIN, ROLE_CHEF_DEPT, ROLE_GESTIONNAIRE, ROLE_EVALUATEUR, ROLE_ALLOWED_TO_SWITCH]

    # enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    # password_hashers:
    #     Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    #     App\Entity\User:
    #         algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        chain_provider:
            chain:
                providers: [fos_userbundle, my_ldap]
        fos_userbundle:
            id: fos_user.user_provider.username_email
        my_ldap:
            ldap:
                service: Symfony\Component\Ldap\Ldap
                base_dn: '%base_dn%'
                search_dn: '%search_dn%'
                search_password: password
                default_roles: ROLE_USER
                uid_key: sAMAccountName
                extra_fields: ['email']
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            # user_checker: App\Security\UserChecker
            pattern:  ^/login
            stateless: true
            anonymous: true
            provider: chain_provider
            json_login:
                check_path: fos_user_security_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        reinitialisationMotDePass:
            pattern:  ^/reinitialisationMotDePass
            stateless: true
            anonymous: true
            provider: fos_userbundle
        app_reset_password:
            pattern: ^/reset
            stateless: true
            anonymous: true
        app_check_email:
            pattern: ^/check-email
            stateless: true
            anonymous: true
        app_dossier:
            pattern: ^/dossier
            stateless: true
            anonymous: true
        test:
            pattern: ^/test
            stateless: true
            anonymous: true
        main:
            pattern:   ^/
            stateless: true
            anonymous: true
            switch_user: true
            provider: chain_provider
            access_denied_handler: App\Security\AccessDeniedHandler
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/dossier/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/swagger, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/reinitialisationMotDePass, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/reset, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/check-email, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/test, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
